{"version":3,"sources":["reportWebVitals.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Slideshow","props","auto","timer","setInterval","setState","image","state","next","back","pause","clearInterval","className","src","this","alt","onClick","type","class","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8MAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCDRQ,E,kDACJ,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAGRC,KAAK,WACH,EAAKC,MAAMC,aAAY,WACrB,EAAKC,SAAS,CAACC,MAAwB,GAAlB,EAAKC,MAAMD,MAAS,EAAE,EAAKC,MAAMD,MAAM,MAC3D,OAPa,EASlBE,KAAK,WACH,EAAKH,SAAS,CAACC,MAAwB,GAAlB,EAAKC,MAAMD,MAAS,EAAE,EAAKC,MAAMD,MAAM,KAV5C,EAYlBG,KAAK,WACH,EAAKJ,SAAS,CAACC,MAAwB,GAAlB,EAAKC,MAAMD,MAAS,EAAE,EAAKC,MAAMD,MAAM,KAb5C,EAelBI,MAAM,WACJC,cAAc,EAAKR,QAdnB,EAAKI,MAAM,CAACD,MAAM,GAFF,E,qDAmBhB,OACE,sBAAKM,UAAU,SAAf,UACE,qBAAKA,UAAU,QAAQC,IAAK,cAAiBC,KAAKP,MAAMD,MAAM,OAASS,IAAI,WAC3E,mBAAGH,UAAU,YAAYI,QAASF,KAAKL,KAAvC,SAA6C,mBAAGG,UAAU,wBAC1D,mBAAGA,UAAU,YAAYI,QAASF,KAAKN,KAAvC,SAA6C,mBAAGI,UAAU,yBAC1D,wBAAQA,UAAU,SAASK,KAAK,SAASD,QAASF,KAAKZ,KAAvD,kBACA,qBAAKgB,MAAM,QAAX,SAAmB,wBAAQN,UAAU,UAAUK,KAAK,SAASD,QAAUF,KAAKJ,MAAzD,4B,GA1BHS,IAAMC,WAgC9BC,IAASC,OAEP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BjC,M","file":"static/js/main.7ec577a5.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n// import Trinh from './event';\n\nclass Slideshow extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={image:1};\n  }\n  auto=()=> {\n    this.timer=setInterval(() => {\n      this.setState({image:this.state.image==5?1:this.state.image+1})\n    }, 1500)\n  }\n  next=()=>{\n    this.setState({image:this.state.image==5?1:this.state.image+1})\n  }\n  back=()=>{\n    this.setState({image:this.state.image==1?5:this.state.image-1})\n  }\n  pause=()=>{\n    clearInterval(this.timer);\n   }\n  render(){\n    return(\n      <div className=\"father\" >\n        <img className=\"image\" src={\"image/\"+\"photo\"+this.state.image+\".png\" } alt=\"image1\" />\n        <a className=\"icon-back\" onClick={this.back}><i className=\"fas fa-angle-left\"></i></a>\n        <a className=\"icon-next\" onClick={this.next}><i className=\"fas fa-angle-right\"></i></a>\n        <button className=\"button\" type=\"button\" onClick={this.auto}>AUTO</button>\n        <div class=\"pause\"><button className=\"button1\" type=\"button\" onClick= {this.pause}>PAUSE</button></div>\n      </div>\n    )\n  }\n    \n}\nReactDOM.render(\n  // <Toggle />,\n  <Slideshow></Slideshow>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}